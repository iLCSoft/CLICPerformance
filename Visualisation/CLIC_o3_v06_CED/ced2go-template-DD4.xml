<?xml version="1.0" encoding="us-ascii"?>

<!--##########################################
    #  Example default steering file for     #
    #  ILD and CLIC when drawn via ced2go    #
    #  Author: T.Quast, 12/08/2015            #
    ##########################################

    Usage: 
    This file is used instead of ced2go-template.xml if in 
    "ced2go -d <rel. path of detectorFile.xml> <rel. path of slcio-File>" 
    the detectorFile.xml contains a <lccdd> tag. 
  -->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">
 <execute>
  <!-- <processor name="MyEventSelector"/> -->
  <!--   <if condition="MyEventSelector"> -->
      <processor name="MyInitializeDD4hep"/>
      <processor name="MyCEDViewer"/>
   <!-- </if> -->
</execute>

 <global>
   <parameter name="LCIOInputFiles">
      $LCIOInputFiles$
   </parameter> 
   <parameter name="SkipNEvents" value="0"/>
   <parameter name="Verbosity" options="DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT"> MESSAGE  </parameter>  
 </global>

 <processor name="MyInitializeDD4hep" type="InitializeDD4hep">
  <parameter name="DD4hepXMLFile">
    $DD4XMLFile$
  </parameter>
</processor>

 <processor name="MyEventSelector" type="EventSelector">
   <!--event list - pairs of Eventnumber RunNumber-->
   <parameter name="EventList" type="IntVec"> 
       28 0
       33 0
       52 0
       63 0
       73 0
       78 0
   </parameter>
 </processor>


<processor name="MyCEDViewer" type="DDCEDViewer">
  <parameter name="DrawDetector" type="bool">true </parameter>
  <parameter name="DrawSurfaces" type="bool">
    $DrawSurfaces$
  </parameter>
  <parameter name="DetailledDrawing">
    VXD
    VertexBarrel
  </parameter>
 <!--CEDViewer: event display of LCIO objects  - based on CED by A.Zhelezov.-->
  <!--color scheme to be used for drawing - see startup log MESSAGEs for options-->
  <parameter name="ColorScheme" type="int">12 </parameter>
  <!--draw detector from GEAR file with given ID (see MarlinCED::newEvent() ) : 0 ILD, 1 CLIC, -1 none-->
  <parameter name="DrawDetectorID" type="int">0 </parameter>
  <!--draw a helix for PFO objects (usefull for Si tracker): 0: disabled, 1: enabled-->
  <parameter name="DrawHelixForPFOs" type="int">1 </parameter>
  <!-- Color recunstructed particle by energy -->
  <parameter name="ColorByEnergy" type="bool">true</parameter>
  <!-- Minimal value for energy which will be represented as blue -->
  <parameter name="ColorByEnergyMin" type="double">0.0</parameter>
  <!-- Maximal value for energy which will be represented as red -->
  <parameter name="ColorByEnergyMax" type="double">35.0</parameter>
  <!-- Hue value that will be used to determine the pallete -->
  <parameter name="ColorByEnergySaturation" type="double">1.0</parameter>
  <!-- Brigtness value that will be used to determine the pallete -->
  <parameter name="ColorByEnergyBrightness" type="double">1.0</parameter>
  <!-- Automatically adjust event by event the blue to min energy and red to max energy of event -->
  <parameter name="ColorByEnergyAutoColor" type="bool">true</parameter>
  <!-- Scale line thickness of drawn helixes, usefull for image dumps -->
  <parameter name="ScaleLineThickness" type="double">12</parameter>
  <!-- Scale marker size of cluster markers, usefull for image dumps -->
  <parameter name="ScaleMarkerSize" type="double">1</parameter>
  <!--draw a helix for Track objects: -1: none, 0: default, 1: atIP, 2: atFirstHit, 3: atLastHit, 4: atCalorimeter-->
  <parameter name="DrawHelixForTrack" type="int">0 </parameter>
  <!--Max R (mm) Extent for drawing Helix if UseTPCForLimitsOfHelix false-->
  <parameter name="HelixMaxR" type="float">2000 </parameter>
  <!--Max Z (mm) Extent for drawing Helix if UseTPCForLimitsOfHelix false-->
  <parameter name="HelixMaxZ" type="float">2500 </parameter>
  <!--minimum energy of MCParticles to be drawn-->
  <parameter name="MCParticleEnergyCut" type="float">0.001 </parameter>
  <!--draw helices in the color of the track/PFO: 0: disabled (lightgrey), 1: enabled-->
  <parameter name="UseColorForHelixTracks" type="int">1 </parameter>
  <!--Use the gear parameters to define the max extent of drawing a helix-->
  <parameter name="UseTPCForLimitsOfHelix" type="bool">true </parameter>
  <!--If set true generator status is ignored for MCParticles to be drawn-->
  <parameter name="UsingParticleGun" type="bool">false </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--Wait for Keyboard before proceed-->
  <parameter name="WaitForKeyboard" type="int">1 </parameter>
  <parameter name="DrawInLayer">
	PandoraPFOs 0 3 3
	LE_LooseSelectedPandoraPFOs 0 3 4
	LE_SelectedPandoraPFOs 0 3 5
	LE_TightSelectedPandoraPFOs 0 3 6
	LooseSelectedPandoraPFOs 0 3 7
	SelectedPandoraPFOs 0 3 8
	TightSelectedPandoraPFOs 0 3 9

     
     MCParticle 0 3 0



  </parameter>
</processor>


</marlin>
